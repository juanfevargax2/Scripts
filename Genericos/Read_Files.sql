DROP FUNCTION Q2;
create or replace FUNCTION "Q2" 
RETURN VARCHAR2 IS
BEGIN
RETURN chr(113)||chr(39)||chr(143);
END Q2;
/

DROP FUNCTION Q3;
create or replace FUNCTION "Q3" 
RETURN VARCHAR2 IS
BEGIN
RETURN chr(143)||chr(39);
END Q3;
/

DROP FUNCTION Q4;
create or replace FUNCTION "Q4" (A VARCHAR2)
RETURN VARCHAR2 IS
BEGIN
RETURN q2||a||q3;
END Q4;
/

DROP PROCEDURE INSERT_DYNAMIC;
create or replace PROCEDURE "INSERT_DYNAMIC" (TABLE_NAME VARCHAR2,FIELDS VARCHAR2,VALS VARCHAR2)
IS
BEGIN
EXECUTE IMMEDIATE 'INSERT INTO '||TABLE_NAME||' ('||FIELDS||') VALUES ('||VALS||')';
END;
/
DROP PROCEDURE READ_FILE;
  CREATE OR REPLACE PROCEDURE "READ_FILE" (R_FILE VARCHAR2,PATH VARCHAR2,ENCODING VARCHAR2,T_TABLE VARCHAR2 DEFAULT NULL,O_FIELDS VARCHAR2,D_VALUES VARCHAR2 DEFAULT NULL)
AS
V1 NVARCHAR2(32627);
F1 UTL_FILE.FILE_TYPE;
ID NUMBER(10);
BEGIN
ID := 0;
IF ENCODING = 'UTF8' OR ENCODING = 'UTF8B' THEN
F1 := UTL_FILE.FOPEN_NCHAR(PATH,R_FILE,'R',32627); 
ELSE
F1 := UTL_FILE.FOPEN(PATH,R_FILE,'R',32627); 
END IF;
LOOP 
 BEGIN 
 IF ENCODING = 'UTF8' OR ENCODING = 'UTF8B' THEN
 UTL_FILE.GET_LINE_NCHAR(F1,V1,32767);
 IF ENCODING = 'UTF8B' AND ID=0 THEN 
    V1:=SUBSTR(V1,2);
 END IF;
 ELSE
 UTL_FILE.GET_LINE(F1,V1,32767); 
 END IF;  
  INSERT_DYNAMIC(T_TABLE,'TRAMA,ID'||O_FIELDS,Q4(V1)||','||Q4(ID)||D_VALUES);
  COMMIT;
  ID := ID + 1;
  EXCEPTION 
  WHEN NO_DATA_FOUND THEN 
  EXIT; 
  WHEN OTHERS THEN 
  dbms_output.put_line (SQLERRM);
 END; 
END LOOP;
UTL_FILE.FCLOSE(F1); 
DBMS_OUTPUT.PUT_LINE(R_FILE||' READ :)');
--EXCEPTION
--WHEN OTHERS THEN 
--dbms_output.put_line (SQLERRM);
END;

/



/*

CREATE OR REPLACE DIRECTORY SICOBI AS 'C:\$user\ENTREGAS\Sicobi\FUENTE';
CREATE OR REPLACE DIRECTORY SICOBI_DEST AS 'C:\$user\ENTREGAS\Sicobi\DESTINO';

DROP TABLE SICOBI_FILE;
CREATE TABLE SICOBI_FILE
(
TRAMA NVARCHAR2(2000) NOT NULL,
ID NUMBER(20) NOT NULL
);

TRUNCATE TABLE SICOBI_FILE;
SET SERVEROUTPUT ON;
BEGIN
READ_FILE('SRC.txt','SICOBI','ANSI','SICOBI_FILE','','');
EXCEPTION 
WHEN OTHERS THEN 
RETURN;   
END;
/



*/